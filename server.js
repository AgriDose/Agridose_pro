require('dotenv').config();
const express = require('express');
const mongoose = require('mongoose');
const connectDB = require('./config/db');

const app = express();

// Middlewares ุงูุฃุณุงุณูุฉ
app.use(express.json());
app.use(require('cors')());
app.use(require('helmet')());

// ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
connectDB();

// Route ุงูุฃุณุงุณู
app.get('/', (req, res) => {
  res.json({
    status: 'ูุดุท',
    message: '๐ฑ AgriDose ูุนูู ุจูุฌุงุญ',
    db_status: mongoose.connection.readyState === 1 ? 'ูุชุตู' : 'ุบูุฑ ูุชุตู'
  });
});

// Route ูุงุฎุชุจุงุฑ ุงูุฎุงุฏู (ูุถุงู ุฌุฏูุฏ)
app.get('/test', (req, res) => {
  res.json({ 
    success: true,
    message: 'โ ุงุฎุชุจุงุฑ ุงูุฎุงุฏู ูุงุฌุญ',
    timestamp: new Date().toISOString()
  });
});

// Route ููุชุญูู ูู ุงุชุตุงู MongoDB (ูุถุงู ุฌุฏูุฏ)
app.get('/db-check', async (req, res) => {
  try {
    const collections = await mongoose.connection.db.listCollections().toArray();
    res.json({
      db_connected: true,
      collections: collections.map(c => c.name)
    });
  } catch (err) {
    res.status(500).json({
      db_connected: false,
      error: err.message
    });
  }
});

// ุงูุชุนุงูู ูุน ุงูุฃุฎุทุงุก
app.use((req, res) => {
  res.status(404).json({ error: 'ูุณุงุฑ ุบูุฑ ููุฌูุฏ' });
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`);
});
